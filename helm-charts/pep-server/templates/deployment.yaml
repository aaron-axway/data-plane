apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pep-server.appName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pep-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- include "pep-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pep-server.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "pep-server.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.podSecurityContextEnabled }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      dnsConfig:
        options:
          - name: use-vc
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: docker.repository.axway.com/amplifyintegration-docker-prod/1.0.0/alpine-curl-jq:latest
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          volumeMounts:
            - name: {{ .Values.global.volumeStorageName }}
              mountPath: /efs
          command:
            - "/bin/sh"
            - "-c"
            - "hazelcastIp=\"hazelcast-{{ .Values.global.appEnv }}.{{ .Release.Namespace }}.svc.cluster.local\";
              until [ \"$(curl -s $hazelcastIp:5701/hazelcast/health | jq '.clusterState==\"ACTIVE\" and .nodeState==\"ACTIVE\"
              and .clusterSafe==true and .clusterSize>=2')\" = \"true\" ];  do
                printf \"Waiting for hazelcast ...\n\";
                sleep 2;
              done"
      containers:
        - name: {{ template "pep-server.appName" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.buildTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: configmap-common
            - secretRef:
                name: "cluster-details"
            - configMapRef:
                name: {{ template "pep-server.appName" . }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: local_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: hz_client_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 9090
              name: xds
            - containerPort: 8080
              name: internal
          volumeMounts:
            - name: {{ .Values.global.volumeStorageName }}
              mountPath: /efs
            - name: tmpdir
              mountPath: /tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          startupProbe:
            {{ toYaml .Values.startupProbe | nindent 12 }}
          livenessProbe:
            {{ toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{ toYaml .Values.readinessProbe | nindent 12 }}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: {{ .Values.global.volumeStorageName }}
        persistentVolumeClaim:
          claimName: {{ .Release.Namespace }}-{{ .Values.global.claimName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
