######################################
##      Globals                     ##
######################################

global:
  #image settings
  image:
    #repository the docker repository which will have the image
    repository: eipaas-docker-snapshot.artifactory.axway.com
    #pullPolicy the image pull policy
    pullPolicy: IfNotPresent
    #imagePullSecrets secret that stores credentials for access to a registry for docker images
    imagePullSecrets:
      - name: ampint-docker-artifactory

  # Chose here the HOSTNAME for your dataplane:
  #    it will be: appEnv.external_domain (for example here: env.your-dataplane-domain.com)
  appEnv: env
  # claimName a reference to the file share claim name
  claimName: sharedstorage-claim
  # volumeStorageName the volume name of the persistent fileshare
  volumeStorageName: fileshare-storage
  
######################################
##      Image                       ##
######################################

image:
  name: pep-server
  buildTag: latest

######################################
##      Service                     ##
######################################

service:
  type: ClusterIP
  ports:
    - name: xds
      protocol: TCP
      port: 9090
      targetPort: 9090


######################################
##      Probes                      ##
######################################

startupProbe:
  httpGet:
    path: /q/health/started
    port: internal
  failureThreshold: 60
  periodSeconds: 2
livenessProbe:
  httpGet:
    path: /q/health/live
    port: internal
readinessProbe:
  httpGet:
    path: /q/health/ready
    port: internal
  failureThreshold: 1
  periodSeconds: 5

######################################
##      Security                    ##
######################################


#serviceaccount for inbound-worker
serviceAccount:
  enabled: true
  # Use preexisting: true if you want to use a preexisting service account (e.g. created by the infra)
  preexisting: false
  annotations: {}
  name: "pep-server"
  automountServiceAccountToken: true

podSecurityPolicy:
  # only applied if serviceAccount is enabled
  # will bind that service Account to the "restricted" psp
  # as no special capabilities are required for this service
  enabled: true

podAnnotations: {}

podSecurityContextEnabled: true

podSecurityContext:
  supplementalGroups:
    - 1001
  fsGroup: 1001

securityContext:
  runAsUser: 10010
  runAsGroup: 10020
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - all

######################################
##      Network Policies            ##
######################################

calicoNetpol:
  enabled: false

######################################
##      Capacity/Affinity           ##
######################################

replicaCount: 1
maxSurge: 100%
maxUnavailable: 0

resources:
  limits:
    cpu: 4000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 75

podDisruptionBudget:
  enabled: false
  minPods: 1

nodeSelector: {}
tolerations: []
affinity: {}

######################################
##      Environment                 ##
######################################

javaOpts: "-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=90"
QUARKUS_LOG_CONSOLE_LEVEL: "INFO"

#TerminationGracePeriod
terminationGracePeriodSeconds: 60
