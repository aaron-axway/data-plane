apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hazelcast.appName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hazelcast.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "hazelcast.appName" . }}
  selector:
    matchLabels:
      {{- include "hazelcast.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hazelcast.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "hazelcast.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.podSecurityContextEnabled }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      dnsConfig:
        options:
          - name: use-vc
      containers:
        - name: {{ template "hazelcast.appName" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.buildTag | default .Chart.AppVersion }}"
          command:
            - "/bin/sh"
            - "-c"
            - >
              mkdir -p /efs/upgrade-check &&
              touch /efs/upgrade-check/hazelcast-started-$HOSTNAME-{{ .Values.image.buildTag }}.txt &&
              sh startup.sh
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: hazelcast-port
              containerPort: 5701
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: 5701
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: 5701
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          volumeMounts:
          - name: {{ template "hazelcast.appName" . }}
            mountPath: /data/hazelcast
          - name: {{ .Values.global.volumeStorageName }}
            mountPath: /efs
          - name: tmp
            mountPath: /tmp
          - name: {{ .Values.persistence.claimTemplateName }}
            mountPath: /mdisk
          envFrom:
            {{- if ne  (include "parent.dataplaneMode" . ) "shared" }}
            - secretRef:
                name: "ampint-frommail"
            {{- end }}
            - configMapRef:
                name: configmap-common
            - configMapRef:
                name: {{ template "hazelcast.appName" . }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name                
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: {{ template "hazelcast.appName" . }}
        configMap:
          name: hazelcast-yaml
      - name: tmp
        emptyDir: {}
      - name: {{ .Values.global.volumeStorageName}}
        persistentVolumeClaim:
          claimName: {{ .Release.Namespace }}-{{ .Values.global.claimName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.claimTemplateName }}
      spec:
        accessModes:
          - {{ .Values.persistence.claimTemplateAccessModes }}
        storageClassName: {{ .Values.persistence.claimTemplateStorageClass }}
        resources:
          requests:
            storage: "{{ .Values.persistence.claimTemplateRequestStorage }}"

