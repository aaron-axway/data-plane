apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "management-center.appName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "management-center.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  minReadySeconds: 60
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- include "management-center.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "management-center.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.global.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "management-center.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.podSecurityContextEnabled }}
      securityContext: {{- toYaml .Values.podSecurityContext| nindent 8 }}
      {{- end }}
      dnsConfig:
        options:
          - name: use-vc
      containers:
        - name: {{ template "management-center.appName" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}/{{ .Values.image.name}}:{{ .Values.image.buildTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: "management-center-credentials"
            - configMapRef:
                name: {{ template "management-center.appName" . }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: 100
            periodSeconds: 3
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1
            tcpSocket:
              port: 8080
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
