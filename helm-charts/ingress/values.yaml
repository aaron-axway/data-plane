######################################
##      Globals                     ##
######################################

global:
  #image settings
  image:
    #repository the docker repository which will have the image
    repository: eipaas-docker-snapshot.artifactory.axway.com
    #pullPolicy the image pull policy
    pullPolicy: IfNotPresent
    #imagePullSecrets secret that stores credentials for access to a registry for docker images
    imagePullSecrets:
      - name: ampint-docker-artifactory

  # Chose here the HOSTNAME for your dataplane:
  #    it will be: appEnv.external_domain (for example here: env.your-dataplane-domain.com)
  appEnv: env
  #external_domain domain name for environment
  external_domain: ""

  # claimName a reference to the file share claim name
  claimName: sharedstorage-claim
  # volumeStorageName the volume name of the persistent fileshare
  volumeStorageName: fileshare-storage
  # clusterKey is obtained from the Control Plane User Interface
  clusterKey: ""


######################################
##      Image                       ##
######################################

image:
  name: envoyproxy
  buildTag: v1.28.0

######################################
##      Service                     ##
######################################

service:
  type: LoadBalancer
  ports:
    - name: ssh
      protocol: TCP
      port: 9022
      targetPort: 2222
    - name: apim
      protocol: TCP
      port: 4443
      targetPort: 4443
    - name: openapi
      protocol: TCP
      port: 443
      targetPort: 8443
    - name: https
      protocol: TCP
      port: 9443
      targetPort: 9443
    - name: http
      protocol: TCP
      port: 9080
      targetPort: 9080


######################################
##      Probes                      ##
######################################

startupProbe:
  httpGet:
    path: /started
    port: internal
  failureThreshold: 30
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /
    port: admin
readinessProbe:
  httpGet:
    path: /ready
    port: admin

terminationGracePeriodSeconds: 60
######################################
##      Security                    ##
######################################

serviceAccount:
  enabled: true
  # Use preexisting: true if you want to use a preexisting service account (e.g. created by the infra)
  preexisting: false
  annotations: {}
  name: "ingress"
  automountServiceAccountToken: true

podSecurityPolicy:
  # only applied if serviceAccount is enabled
  # will bind that service Account to the "restricted" psp
  # as no special capabilities are required for this service
  enabled: true

podAnnotations: {}

podSecurityContextEnabled: true

podSecurityContext:
  supplementalGroups:
    - 1001
  fsGroup: 1001

securityContext:
  runAsUser: 10010
  runAsGroup: 10020
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

######################################
##      Network Policies            ##
######################################

calicoNetpol:
  enabled: false
  # reference the targets the inbound-worker is allowed to reach
  outboundRule:
    # use this to reference a (preexisting) networkset
    selector: role == 'any-address'
    # or uncomment this to directly reference IP cidr instead
    #nets:
    #  - 0.0.0.0/0 # put your subnet cidre here
  # reference the source IPs allowed into envoy
  subnetEntityRule:
    # use this to reference a (preexisting) networkset
    selector: role == 'nodes-subnet-vpc-cidr'
    # or uncomment this to directly reference IP cidr instead
    #nets:
    #  - 10.0.0.0/24 # put your subnet cidr here

######################################
##      Capacity/Affinity           ##
######################################

replicaCount: 1
strategy: |
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 1

resources:
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 1000m
    memory: 1000Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 75

podDisruptionBudget:
  enabled: false
  minPods: 1

nodeSelector: {}
tolerations: []
affinity: {}
files: {}

######################################
##      Environment                 ##
######################################

# The proxy admin port is not externally accessible by default, override this to
# true in order to invoke the proxy admin APIs
exposeProxyAdminPort: false
# Override this if exposeProxyAdminPort=true and a different port is required for the proxy admin APIs.
proxyAdminPort: 9901
ports:
  admin:
    containerPort: 9901
    protocol: TCP
  internal:
    protocol: TCP
    containerPort: 9902
  apim:
    protocol: TCP
    containerPort: 4443
  openapi:
    protocol: TCP
    containerPort: 8443
  https:
    protocol: TCP
    containerPort: 9443
  http:
    protocol: TCP
    containerPort: 9080
  ssh:
    protocol: TCP
    containerPort: 2222

timeouts:
  # Loadbalancer timeout higher than request to allow for clean closing of request. 
  loadbalancer: 3700
  maxDuration: 3600s
  idleTimeout: 3600s
  connectTimeout: 15s

nameOverride: ""
fullnameOverride: ""

command:
  - /usr/local/bin/envoy

argsTemplate: |-
  - -l
  - $(LOGLEVEL) 
  - -c
  - /config/envoy.yaml

env:
  LOGLEVEL: info

templates:
  envoy.yaml: |-
    node:
      cluster: ampint-gw
      id: ampint-gw

    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: {{ .Values.ports.admin.containerPort }}

    dynamic_resources:
      cds_config:
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
            - envoy_grpc:
                cluster_name: xds_cluster

    static_resources:
      listeners:
      - name: internal
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9902
        filter_chains:
          - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: internal
                codec_type: AUTO
                stream_idle_timeout: 15s
                use_remote_address: true
                xff_num_trusted_hops: 0
                common_http_protocol_options:
                  idle_timeout: 15s
                route_config:
                  name: internal
                  validate_clusters: false
                  virtual_hosts:
                  - name: internal
                    domains:
                    - "*"
                    routes:
                    - match:
                        path: "/started"
                      route:
                        cluster: blackhole
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local headers, body = request_handle:httpCall(
                          "service_admin",
                          {
                            [":method"] = "GET",
                            [":path"] = "/stats?filter=http.apim.rds.ampint-gw.update_success&format=text",
                            [":authority"] = "internal"
                          },
                          "", 2000, false)

                          local count = string.gsub(body, "^%s*.+:%s*(.-)%s*$", "%1")

                          if count == "0" then
                            request_handle:respond(
                              {[":status"] = "503"},
                              "Not Ready")
                          else
                            request_handle:respond(
                                {[":status"] = "200"},
                                "Ready")
                          end
                        end      
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: apim
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 4443
        listener_filters:
        - name: "envoy.filters.listener.tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
        filter_chains:
        - filter_chain_match:
            server_names:
            {{- if eq  (include "parent.dataplaneMode" . ) "shared" }}
            - "*.{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- else }}
            - "{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- end }}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - pkcs12:
                    filename: ${server_cert_path}
                  password:
                    environment_variable: server_truststore_password
          filters:
            - name: envoy.filters.network.connection_limit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit
                stat_prefix: apim_max_connections
                max_connections: 30000
                delay: 10s    
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: apim
                codec_type: AUTO
                strip_matching_host_port: true
                stream_idle_timeout: {{ .Values.timeouts.idleTimeout }}
                use_remote_address: true
                xff_num_trusted_hops: 0
                access_log:
                - name: envoy.access_loggers.http_grpc
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
                    common_config:
                      log_name: "apim"
                      transport_api_version: V3
                      grpc_service: 
                        envoy_grpc:
                          cluster_name: als_cluster
                common_http_protocol_options:
                  idle_timeout: {{ .Values.timeouts.idleTimeout }}
                rds:
                  route_config_name: ampint-gw
                  config_source:
                    resource_api_version: V3
                    api_config_source:
                      api_type: GRPC
                      transport_api_version: V3
                      grpc_services:
                        - envoy_grpc:
                            cluster_name: xds_cluster
                http_filters:
                  - name: dynamic_audit_metadata
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      default_source_code:
                        inline_string:
                          function envoy_on_request(request_handle)
                            local audit = request_handle:metadata():get("audit")
                            request_handle:streamInfo():dynamicMetadata():set("axway.apim", "audit", audit)
                          end
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: https-1
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9443
        listener_filters:
        - name: "envoy.filters.listener.tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
        filter_chains:
        - filter_chain_match:
            server_names:
            {{- if eq  (include "parent.dataplaneMode" . ) "shared" }}
            - "*.{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- else }}
            - "{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- end }}
          filters:
            - name: envoy.filters.network.connection_limit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit
                stat_prefix: traffic_max_connections
                max_connections: 30000
                delay: 10s    
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: https
                cluster: inbound-worker-https
                max_connect_attempts: 3
                idle_timeout: {{ .Values.timeouts.idleTimeout }}

      - name: https-2
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8443
        listener_filters:
        - name: "envoy.filters.listener.tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
        filter_chains:
        - filter_chain_match:
            server_names:
            {{- if eq  (include "parent.dataplaneMode" . ) "shared" }}
            - "*.{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- else }}
            - "{{ .Values.global.appEnv }}.{{ .Values.global.external_domain }}"
            {{- end }}
          filters:
            - name: envoy.filters.network.connection_limit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit
                stat_prefix: traffic_max_connections
                max_connections: 30000
                delay: 10s    
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: https
                cluster: inbound-worker-https
                max_connect_attempts: 3
                idle_timeout: {{ .Values.timeouts.idleTimeout }}

      - name: http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9080
        filter_chains:
        - filters:
            - name: envoy.filters.network.connection_limit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit
                stat_prefix: traffic_max_connections
                max_connections: 30000
                delay: 10s    
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: http
                cluster: inbound-worker-http
                max_connect_attempts: 3
                idle_timeout: {{ .Values.timeouts.idleTimeout }}

      - name: ssh
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 2222
        listener_filters:
        - name: "envoy.filters.listener.tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
        filter_chains:
          filters:
            - name: envoy.filters.network.connection_limit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit
                stat_prefix: ssh_max_connections
                max_connections: 30000
                delay: 10s    
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: ssh
                cluster: inbound-worker-ssh
                max_connect_attempts: 3
                idle_timeout: {{ .Values.timeouts.idleTimeout }}
 
      clusters:
      - name: service_admin
        connect_timeout: 0.25s
        type: STATIC
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options:
                # Configure an HTTP/2 keep-alive to detect connection issues and reconnect
                # to the admin server if the connection is no longer responsive.
                connection_keepalive:
                  interval: 30s
                  timeout: 5s
        load_assignment:
          cluster_name: service_admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 9901
      - name: xds_cluster
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options:
                connection_keepalive:
                  interval: 30s
                  timeout: 5s
        load_assignment:
          cluster_name: xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: pep-server-{{ .Values.global.appEnv }}
                    port_value: 9090
      - name: als_cluster
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options:
                connection_keepalive:
                  interval: 30s
                  timeout: 5s
        load_assignment:
          cluster_name: als_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: pep-server-{{ .Values.global.appEnv }}
                    port_value: 9090

      - name: inbound-worker-http
        connect_timeout: {{ .Values.timeouts.connectTimeout }}
        http_protocol_options: 
          allow_chunked_length: true
        typed_extension_protocol_options:
          envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions
            idle_timeout: {{ .Values.timeouts.idleTimeout }}
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: inbound-worker-http
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: inbound-worker-{{ .Values.global.appEnv }}
                    port_value: 9080
        health_checks:
          - timeout: 1s
            interval: 20s 
            unhealthy_threshold: 3
            healthy_threshold: 3
            tcp_health_check: {}
      - name: inbound-worker-https
        connect_timeout: {{ .Values.timeouts.connectTimeout }}
        http_protocol_options: 
          allow_chunked_length: true
        typed_extension_protocol_options:
          envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions
            idle_timeout: {{ .Values.timeouts.idleTimeout }}
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: inbound-worker-https
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: inbound-worker-{{ .Values.global.appEnv }}
                    port_value: 9443
        health_checks:
          - timeout: 1s
            interval: 20s 
            unhealthy_threshold: 3
            healthy_threshold: 3
            tcp_health_check: {}
      - name: inbound-worker-ssh
        connect_timeout: {{ .Values.timeouts.connectTimeout }}
        typed_extension_protocol_options:
          envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions
            idle_timeout: {{ .Values.timeouts.idleTimeout }}
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: inbound-worker-ssh
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: inbound-worker-{{ .Values.global.appEnv }}
                    port_value: 2222
        health_checks:
          - timeout: 1s
            interval: 20s 
            unhealthy_threshold: 3
            healthy_threshold: 3
            tcp_health_check: {}